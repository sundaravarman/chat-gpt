import React, { useEffect, useState } from 'react';
import { Table, Button, Modal, Form, message, Input } from 'antd';
import 'antd/dist/antd.css';
import axios from 'axios';

interface projectpocprops {
  selectedOption1: string | null;
}

const Projectpoc: React.FC<projectpocprops> = ({ selectedOption1 }) => {
  const [tableData, setTableData] = useState([]);
  const [isModalVisible, setIsModalVisible] = useState(false);
  const [person1Value, setPerson1Value] = useState('');
  const [person2Value, setPerson2Value] = useState('');
  const columns = [
    { title: 'project', dataIndex: 'project_name', key: 'project_name' },
    { title: 'DFT Lead', dataIndex: 'dft_lead', key: 'dft_lead' },
    { title: 'DV Lead', dataIndex: 'dv_lead', key: 'dv_lead' },
  ];

  const showModal = () => {
    if (selectedOption1) {
      setIsModalVisible(true);
    } else {
      message.error('Please select Project before making Add/update Project POC');
    }
  };

  const fetchTableData = async () => {
    try {
      // Replace with your backend API endpoint for fetching table data
      const apiUrl = `http://127.0.0.1:5000/view_leads_info?selectedOption1=${selectedOption1}`;

      const response = await axios.get(apiUrl);

      setTableData(response.data);

      console.log(response.data);
    } catch (error) {
      console.error('Error fetching table data:', error);
    }
  };

  const handleOk = () => {
    setIsModalVisible(false);
    setPerson1Value('');
    setPerson2Value('');
  };

  const handleCancel = () => {
    setIsModalVisible(false);
  };

  useEffect(() => {
    if (selectedOption1) {
      fetchTableData();
    }
  }, [selectedOption1]);

  const onFinish = (values: any) => {
    const finalBackendUrl = `https://127.0.0.1:5000/add_leads_into_tss`;

    const payload = {
      selectedOption1: selectedOption1,
      dftLead: values.DftLead,
      dvLead: values.DvLead
    };

    axios
      .post(finalBackendUrl, payload)
      .then(() => {
        message.success('Form submitted successfully!'); 
        handleOk();
      })
      .catch((error) => {
        console.error('Error submitting form:', error);
        message.error('Failed to submit form. Please try again later.');
      });
  };

  return (
    <div>
      <Button type="primary" onClick={showModal}>
        Add/update Project POC
      </Button>
      <Modal title="Add/update Project POC" visible={isModalVisible} onOk={onFinish} onCancel={handleCancel}>
        <Form onFinish={onFinish}>
          <Form.Item label="DFT Lead" name="DftLead" rules={[{ required: true, message: 'Please enter DFT Lead' }]}>
            <Input value={person1Value} onChange={e => setPerson1Value(e.target.value)} />
          </Form.Item>
          <Form.Item label="DV Lead" name="DvLead" rules={[{ required: true, message: 'Please enter Dv Lead' }]}>
            <Input value={person2Value} onChange={e => setPerson2Value(e.target.value)} />
          </Form.Item>
        </Form>
      </Modal>
      <Table columns={columns} dataSource={tableData} scroll={{ x: 'max-content' }}></Table>
    </div>
  );
};

export default Projectpoc;
